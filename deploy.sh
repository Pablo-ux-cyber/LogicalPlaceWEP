#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
# –ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ—Å–ª–µ git pull

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —É—Å—Ç–∞–Ω–æ–≤–∫–∏
INSTALL_DIR="/var/www/html/logicalplacewep"
LOG_FILE="$INSTALL_DIR/deploy.log"

# –ù–∞—á–∏–Ω–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
echo "=== –ù–∞—á–∞–ª–æ –¥–µ–ø–ª–æ—è: $(date) ===" > $LOG_FILE

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ "$(pwd)" != "$INSTALL_DIR" ]; then
  echo "‚ö†Ô∏è –û—à–∏–±–∫–∞: –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $INSTALL_DIR" | tee -a $LOG_FILE
  exit 1
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." | tee -a $LOG_FILE
npm install --production >> $LOG_FILE 2>&1
if [ $? -ne 0 ]; then
  echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π" | tee -a $LOG_FILE
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
  echo "‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ .env.example..." | tee -a $LOG_FILE
  if [ -f ".env.example" ]; then
    cp .env.example .env
    echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ —à–∞–±–ª–æ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏." | tee -a $LOG_FILE
  else
    echo "‚ö†Ô∏è –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –≤—Ä—É—á–Ω—É—é." | tee -a $LOG_FILE
  fi
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
mkdir -p logs
chmod 777 logs
echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è logs —Å–æ–∑–¥–∞–Ω–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞" | tee -a $LOG_FILE

# –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
echo "üîß –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..." | tee -a $LOG_FILE
npm run build >> $LOG_FILE 2>&1
if [ $? -ne 0 ]; then
  echo "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è" | tee -a $LOG_FILE
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É PM2
if ! command -v pm2 &> /dev/null; then
  echo "üì¶ PM2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..." | tee -a $LOG_FILE
  npm install -g pm2 >> $LOG_FILE 2>&1
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å PM2
echo "üöÄ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º PM2..." | tee -a $LOG_FILE

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ —É–∂–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ PM2
PM2_CHECK=$(pm2 list | grep crypto-signal)
if [ -n "$PM2_CHECK" ]; then
  echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ PM2..." | tee -a $LOG_FILE
  pm2 reload crypto-signal >> $LOG_FILE 2>&1
else
  echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ PM2..." | tee -a $LOG_FILE
  pm2 start npm --name "crypto-signal" -- start >> $LOG_FILE 2>&1
  pm2 save >> $LOG_FILE 2>&1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞
PM2_STATUS=$(pm2 show crypto-signal | grep status | head -1)
echo "üìä –°—Ç–∞—Ç—É—Å PM2: $PM2_STATUS" | tee -a $LOG_FILE

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Ä—Ç–µ
echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É 5002" | tee -a $LOG_FILE
echo "‚úÖ –î–ª—è –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ nginx, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –ø–æ—Ä—Ç 5002" | tee -a $LOG_FILE

echo "=== –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω: $(date) ===" | tee -a $LOG_FILE